% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_functions.R
\name{perform_msa}
\alias{perform_msa}
\title{perform_msa}
\usage{
perform_msa(REvoBC_object, ...)
}
\arguments{
\item{REvoBC_object}{REvoBC object on which we want to perform msa.}

\item{...}{Optional parameters (options and flags) passed to MUSCLE. See the \href{http://www.drive5.com/muscle/muscle_userguide3.8.html}{original guide} for detailed information on all possible options.}
}
\value{
REvoBC object with a new field named \code{alignment}, which is a list with the following fileds:
\itemize{
\item \code{msa_stringset}: output of MSA peformed with MUSCLE.
\item \code{mutations_df} : (deprecated, will be removed).
\item \code{asv_barcode_alignment}: tibble where each line corresponds to a position in a ASV, and the columns encode the following information:
\itemize{
\item asv_names: name of the ASV
\item sample: sample identifier
\item position_bc260: position of the alteration in the original barcode. Note that insertions
are assigned to the position that coincides with their beginning.
\item alt: type of alteration. wt = Wild Type (i.e. non-mutated position). sub = substitution. del = deletion. ins = insertion.
\item{ref_asv}, \item{read_asv}: respectively, the reference nucleotide observed in the original barcode and the one observed on the sequence.
}
\item \code{ASV_alterations_width}: number of alterations for each type in each ASV
\item \code{mutations_coordinates}: tibble that stores all mutations identified on each ASV, indicating the start and end position and the nucleotides involved in the mutation
\item \code{binary_mutation_matrix}: binary matrix encoding presence/absence of mutations on ASVs.
\item \code{mutations_frequency}: tibble where for each position in each ASV you have the information about the frequency of the observed ASV in the sample.
This is useful to convey an idea about what is the fraction of total ASVs in each sample that are affected by that mutation in that position.
}. 
It also creates a new field in the REvoBC object called \code{smoothed deletions}, which contains the following information for
all the deletions identified in the ASVs, whose start and end site have been smoothed using the known cutting sites.
Smoothed is performed in the following way: the start and end site of each deletion are assigned to the cutting site on their left if that
is less distant then 5 nucleotides, otherwise they are assigned to the cutting site on their right.
The following dataframes are stored in the field \code{smoothed deletions}:
\itemize{
\item binary_matrix: matrix |ASV| x |mutations|, which contains 1/0 if the mutation is respectively present or not in the ASV.
\item coordinate_matrix: matrix which stores all the information regardin the smoothed deletions. Information include start and end before smoothing and the deleted sequence.
}
In addition, the following files are saved in the sub-folder "msa" created inthe output directory chosen by the user:
\itemize{
\item dnastringset.fa: fasta file where the sequences are stored.
\item dnastringset.fa: same as fasta, but in csv format.
\item dnastringset_muscle-muscle_msa.fasta: fasta with the stringset resulted from MUSCLE.
\item ASV_alterations_width.csv: number of alterations for each type in each ASV
\item mutations_frequency.csv: per sample normalized frequency of each alteration type, computed for each position of the barcode in each sample.
\item mutations_df.csv: content of mutations_df variable explained above.
\item mutations_coordinates: content of mutations_coordinates variable explained above.
\item binary_mutation_matrix: content of binary_mutation_matrix variable explained above.
}
All identified mutations are displayed in a heatmap, saved inside the folder \code{msa_figures}.
This function also produces an output figure that contain the frequency of 
deletion, substitutions and insertions found in the different samples.
}
\description{
This function performs multi-sequence alignment and outputs statistics about mutations. 
Multiple Sequence Alignment is performed through the \href{https://bioconductor.org/packages/release/bioc/html/muscle.html}{MUSCLE} algorithm.
This function also compute the binary matrix indicating the presence/absence of
mutations in each ASV. Each mutation is characterized by a start position and an end position, it is thus identified through an ID
which indicates the start, end and type of mutation.
}
\examples{
data(revo_analyzed)
output_dir = system.file("extdata", "output", package = "REvoBC")
revo_analyzed$output_directory = output_dir
revo_msa = perform_msa(revo_analyzed)

}
