% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_functions.R
\name{asv_analysis}
\alias{asv_analysis}
\title{ASV_analysis}
\usage{
asv_analysis(
  EvoBC_object,
  barcode = "BC10v0.ORG",
  output_figures = TRUE,
  pid_cutoff_upper = 98,
  pid_cutoff_lower = 5,
  ASV_Richness_cutoff = 2,
  colony_count_cutoff = 2,
  colony_perc_cutoff = 1,
  ...
)
}
\arguments{
\item{EvoBC_object}{(Required). Object of class EvoBC, result of the function \code{initialize_EvoBC}}

\item{barcode}{(Required). String indicating the barcode used in the experiment.}

\item{output_figures}{(Optional). Deafult TRUE: Boolean indicating whether a user whishes to store a figure indicating the number of ASV tracked during the different steps of the analysis.}

\item{pid_cutoff_upper}{(Optional). Default to 98%. Percentage of similarity between a sequence and the original barcode. The ASVs with a similarity obve this threshold will be considered as original non-mutated sequences in the analysis.}

\item{colony_count_cutoff}{(Optional). Default to 2. Minimum number of counts for an ASV to be considered in the statistics.}

\item{...}{Any additional parameters passed to \code{pairwiseAlignment} from \code{Biostrings} (See description).}

\item{export_statistics}{(Optional). Default = TRUE. Boolean indicating whether the user wishes to compute, for each ASV and each day/organ the frequency of counts.}
}
\value{
The EvoBC object passed as a parameter with the following new fields:
\itemize{
\item \code{clean_asv_dataframe}: ASV sequences identified post-filtering (contamination removed,
sequences with a similarity higher than \code{pid_cutoff_upper} to the original barcode
aggregated to it and ASVs named in increasing order (ASV01, ASV02, etc.) according
to their total counts. 
\item \code{barcode}: Info about the barcode selected for the current analysis.

 \item \code{statistics}: another list with the following sub-fileds: 
\itemize{

\item \code{asv_df_percentages}: dataframe with six columns. \code{asv_names} is the name of the ASV.
\code{day_organ} is the sample identifier (e.g. ID of an organ or, in case of longitudinal data, of the timepoint);
\code{count}: total counts for a specific ASV in a specific sample;
\code{perc_in_sample}: counts normalized to the total counts in the corresponding sample;
\code{perc_asv}: conuts normalized to the total counts for the corresponding ASV;
\code{perc_fold_to_max}: counts normalized to the maximum counts observed for the corresponding ASV in a sample.

\item \code{asv_totalCounts}: for each ASV, total counts and number of samples in which it was detected.
\item \code{sample_totalCounts}: for each sample, total counts and number of distinct ASVs detected.
\item \code{ASV_diversity_perSample}: measures of clonal richness and measures of heterogeneity computed for each sample based on the ASVs detected.
\item \code{ASV_persample_frequency}: counts for each ASV in each sample.
\item \code{ASV_persample_detection}: binary matrix indicating whether a sequence has been detected in the corresponding sample.
\item \cpde{ASV_toBarcode_similarity}: edit distance, percentage similarity and alignment score of each ASV compared to the original barcode.
}
}  

It saves the following \code{.csv} files:
\itemize{
\item \code{sequences_barcode_mapping.csv}: dataframe that stores, for each sequence,
its counts in all samples. It also overwrites the sequence name (column seq_names) 
of those that exactly match any of the possible barcodes, using the barcode identifier. The sequences
that don't match the barcode in the current analysis may be due to contamination. 
\item \code{clean_asv_dataframe.csv}, \code{asv_totalCounts}, \code{sample_totalCounts}, \code{asv_df_percentages.csv}, \code{ASV_diversity_perSample.csv}  
\code{ASV_persample_frequency.csv}, \item \code{ASV_persample_detection.csv} and \code{ASV_toBarcode_similarity.csv}: content of the corresponding variables with the same name described above.

}
}
\description{
This function performs the analysis on ASV sequences identified by dada2.
First, it removes possible contamination sequences (ASVs resulting from other barcodes). 
Then it performs pairwise alignment using Needleman-Wunsch global alignment algorithm implemented in function \code{pairwiseAlignment}
in package \code{Biostrings}, aligning each sequence to the original barcode considered in the analysis 
(See the Biostrings documentation \href{https://www.rdocumentation.org/packages/Biostrings/versions/2.40.2/topics/pairwiseAlignment}{here} for more details).
Then it considers all those sequences exhibiting a similarity higher than \code{pid_cutoff_upper} with the original barcode as Non-Marking Guide Controls.
Finally, it computes different statistics for the ASVS, storing:
 the relative frequency of all ASVs in each sample. 
 the relative frequency of each ASV in the samples.
 the counts for each ASV normalized to the counts of the sample with maximum frequency
 the frequency of the different ASVs in each sample.
}
