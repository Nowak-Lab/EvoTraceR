% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/user_functions.R
\name{asv_analysis}
\alias{asv_analysis}
\title{ASV_analysis}
\usage{
asv_analysis(
  REvoBC_object,
  ref_name = "BC10v0",
 
    ref_seq = "TCTACACGCGCGTTCAACCGAGGAAAACTACACACACGTTCAACCACGGTTTTTTACACACGCATTCAACCACGGACTGCTACACACGCACTCAACCGTGGATATTTACATACTCGTTCAACCGTGGATTGTTACACCCGCGTTCAACCAGGGTCAGATACACCCACGTTCAACCGTGGTACTATACTCGGGCATTCAACCGCGGCTTTCTGCACACGCCTACAACCGCGGAACTATACACGTGCATTCACCCGTGGATC",
  ref_flank_left = "^TCTAC",
  ref_flank_right = "CCCGTGGATC$",
  flanking_filtering = "right",
  ref_cut_sites = c(17, 42, 68, 94, 120, 146, 171, 198, 224, 251),
  ref_border_sites = c(1, 26, 52, 78, 104, 130, 156, 182, 208, 234),
  output_figures = TRUE,
  pid_cutoff_nmbc = 98,
  asv_count_cutoff = 2,
  pwa_gapOpening = -25,
  pwa_gapExtension = 0,
  pwa_match = 15,
  pwa_mismatch = -4,
  pwa_type = "global",
  compute_msa = FALSE,
  ...
)
}
\arguments{
\item{REvoBC_object}{(Required). Object of class REvoBC, result of the function \code{initialize_REvoBC}}

\item{ref_name}{String indicating the ID of the reference sequence used in the experiment. Default is 'BC10v0',}

\item{ref_seq}{String indicating the reference sequence used in the experimenti. Default is 'TCTACACGCGCGTTCAACCGAGGAAAACTACACACACGTTCAACCACGGTTTTTTACACACGCATTCAACCACGGACTGCTACACACGCACTCAACCGTGGATATTTACATACTCGTTCAACCGTGGATTGTTACACCCGCGTTCAACCAGGGTCAGATACACCCACGTTCAACCGTGGTACTATACTCGGGCATTCAACCGCGGCTTTCTGCACACGCCTACAACCGCGGAACTATACACGTGCATTCACCCGTGGATC',}

\item{ref_flank_left}{String indicating the first nucleotides of the reference sequence that never mutate over the
course of the experiment. Default is "^TCTAC",}

\item{ref_flank_right}{String indicating the first nucleotides of the reference sequence that never mutate over the
course of the experiment. Default is "CCCGTGGATC$",}

\item{flanking_filtering}{Which among the flaning regions to use to filter out contaminated sequences.
Must be one of c('left', 'right', 'both'), default is 'both'}

\item{ref_cut_sites}{Positions in the reference sequence of the cutting sites. Default is c(17, 42, 68, 94, 120, 146, 171, 198, 224, 251),}

\item{ref_border_sites}{c(26, 52, 78, 104, 130, 156, 182, 208, 234).}

\item{output_figures}{(Optional). Deafult TRUE: Boolean indicating whether a user whishes to store a figure indicating the number of ASV tracked during the different steps of the analysis.}

\item{pid_cutoff_nmbc}{(Optional). Default to 98\%. Percentage of similarity between a sequence and the original barcode. The ASVs with a similarity obve this threshold will be considered as original non-mutated sequences in the analysis.}

\item{asv_count_cutoff}{(Optional). Default to 2. Minimum number of counts for an ASV to be considered in the statistics.}

\item{pwa_gapOpening}{(Optional). Delafult is -25. Parameter \code{gapOpening} passed to \code{pairwiseAlignment} from \code{Biostrings} (See description).}

\item{pwa_gapExtension}{(Optional). Default is 0. Parameter \code{gapExtension} passed to \code{pairwiseAlignment} from \code{Biostrings} (See description). Default is 0.}

\item{pwa_match}{(Optional). Default is 15. Parameter indicating the score for matches during pairwise alignment with \code{Biostrings}. This parameter,
together with the previous one, are used to construct the substitution matrix used by the function \code{pairwiseAlignment}.}

\item{pwa_mismatch}{(Optional). Default is -4. Parameter indicating the penalty for mismatch events during pairwise alignment with \code{Biostrings}.}

\item{pwa_type}{(Optional). Parameter indicating the type of pairwise alignment. Must be one of One of "global", "local", "overlap", "global-local", and "local-global".
For more details see \href{https://www.rdocumentation.org/packages/Biostrings/versions/2.40.2/topics/pairwiseAlignment}{original documentation}}

\item{compute_msa}{(Optional) Default is FALSE. If TRUE, multi-sequence alignment using muscle is performed on the ASVs.}

\item{...}{(Optional). Additional parameter passed to muscle.}
}
\value{
The REvoBC object passed as a parameter with the following new fields:
\itemize{
\item \code{clean_asv_dataframe}: ASV sequences identified post-filtering (contamination removed,
sequences with a similarity higher than \code{pid_cutoff_nmbc} to the original barcode
aggregated to it and ASVs named in increasing order (ASV01, ASV02, etc.) according
to their total counts. 
\item \code{reference}: Info about the reference sequence used for the current analysis.

 \item \code{statistics}: another list with the following sub-fields: 
\itemize{

\item \code{asv_df_percentages}: dataframe with six columns. \code{asv_names} is the name of the ASV.
\code{sample} is the sample identifier (e.g. ID of an organ or, in case of longitudinal data, of the timepoint);
\code{count}: total counts for a specific ASV in a specific sample;
\code{perc_in_sample}: counts normalized to the total counts in the corresponding sample;
\code{perc_asv}: counts normalized to the total counts for the corresponding ASV;
\code{perc_fold_to_max}: counts normalized to the maximum counts observed for the corresponding ASV in a sample.

\item \code{asv_totalCounts}: for each ASV, total counts and number of samples in which it was detected.
\item \code{sample_totalcounts}: for each sample, total counts and number of distinct ASVs detected.
\item \code{asv_diversity_persample}: measures of clonal richness and measures of heterogeneity computed for each sample based on the ASVs detected.
\item \code{asv_persample_frequency}: counts for each ASV in each sample.
\item \code{asv_persample_detection}: binary matrix indicating whether a sequence has been detected in the corresponding sample.
\item \code{asv_toBarcode_similarity}: edit distance, percentage similarity and alignment score of each ASV compared to the original barcode.
\item \code{all_asv_statistics}: all the statistics computed on each ASV grouped together in the same tibble.
}
\item \code{alignment}, another list with the following fields:
\itemize{
\item \code{msa_stringset}: output of MSA performed with MUSCLE.
\item \code{asv_barcode_alignment}: tibble where each line corresponds to a position in a ASV, and the columns encode the following information:
\itemize{
\item asv_names: name of the ASV
\item sample: sample identifier
\item position_bc260: position of the alteration in the original barcode. Note that insertions
are assigned to the position that coincides with their beginning.
\item alt: type of alteration. wt = Wild Type (i.e. non-mutated position). sub = substitution. del = deletion. ins = insertion.
\item{ref_asv}, \item{read_asv}: respectively, the reference nucleotide observed in the original barcode and the one observed on the sequence.
}
}
}


It saves the following \code{.csv} files in a sub-folder \code{asv_analysis} of the main output folder:
\itemize{
\item \code{sequences_barcode_mapping.csv}: dataframe that stores, for each sequence,
its counts in all samples. It also overwrites the sequence name (column seq_names) 
of those that exactly match any of the possible barcodes, using the barcode identifier. The sequences
that don't match the barcode in the current analysis may be due to contamination. 
\item \code{clean_asv_dataframe.csv}, \code{asv_totalCounts.csv}, \code{sample_totalcounts.csv}, \code{asv_df_percentages.csv}, \code{asv_diversity_persample.csv}  
\code{asv_persample_frequency.csv}, \item \code{asv_persample_detection.csv}, \code{asv_diversity_persample.csv} and \code{asv_toBarcode_similarity.csv}: content of the corresponding variables with the same name described above.

}
}
\description{
This function performs the analysis on ASV sequences identified by dada2 and aligns them to the reference sequence.
First, it removes possible contamination sequences (ASVs resulting from other barcodes). 
Then it performs pairwise alignment using Needleman-Wunsch global alignment algorithm implemented in function \code{pairwiseAlignment}
in package \code{Biostrings}, aligning each sequence to the original barcode considered in the analysis 
(See the Biostrings documentation \href{https://www.rdocumentation.org/packages/Biostrings/versions/2.40.2/topics/pairwiseAlignment}{here} for more details).
Then it considers all those sequences exhibiting a similarity higher than \code{pid_cutoff_nmbc} with the original barcode as Non-Marking Guide Controls.
Then, it computes different statistics for the ASVS, storing:
 the relative frequency of all ASVs in each sample. 
 the relative frequency of each ASV in the samples.
 the counts for each ASV normalized to the counts of the sample with maximum frequency
 the frequency of the different ASVs in each sample.
 
Finally, the ASVs that passed the previous filters are aligned again, either through multi-sequence alignment
using the \href{https://bioconductor.org/packages/release/bioc/html/muscle.html}{MUSCLE} algorithm, or using the same 
\code{pairwiseAlignment} function from \code{Biostrings} used to compute the similarity.
}
\examples{
data(revo_initialized)
output_dir = system.file("extdata", "output", package = "REvoBC")
revo_initialized$output_directory = output_dir
revo_analyzed = asv_analysis(REvoBC_object = revo_initialized, )

}
